/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Model.Professor;
import java.awt.Color;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Karlos
 */
public class ManageProfessor extends javax.swing.JInternalFrame {
    public final Professor professor;
    /**
     * Creates new form ManageProfessor
     */
    public ManageProfessor() {
        this.professor = new Professor();
        initComponents();
        this.loadTable();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableProfessor = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        idProfessorField = new javax.swing.JTextField();
        nameProfessorField = new javax.swing.JTextField();
        ageProfessorField = new javax.swing.JTextField();
        disciplineProfessorField = new javax.swing.JTextField();
        wageProfessorField = new javax.swing.JTextField();
        txtId = new javax.swing.JLabel();
        txtName = new javax.swing.JLabel();
        txtAge = new javax.swing.JLabel();
        txtDiscipline = new javax.swing.JLabel();
        txtWage = new javax.swing.JLabel();

        tableProfessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NAME", "AGE", "WAGE", "DISCIPLINE"
            }
        ));
        tableProfessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProfessorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProfessor);

        deleteButton.setBackground(new java.awt.Color(255, 102, 102));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(0, 0, 0));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(204, 255, 204));
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 0, 0));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(255, 153, 153));
        cancelButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(0, 0, 0));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        idProfessorField.setEditable(false);
        idProfessorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idProfessorFieldActionPerformed(evt);
            }
        });

        ageProfessorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageProfessorFieldActionPerformed(evt);
            }
        });

        wageProfessorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wageProfessorFieldActionPerformed(evt);
            }
        });

        txtId.setText("ID:");

        txtName.setText("NAME:");

        txtAge.setText("AGE:");

        txtDiscipline.setText("DISCIPLINE:");

        txtWage.setText("WAGE:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtName)
                            .addComponent(txtAge)
                            .addComponent(txtDiscipline))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameProfessorField)
                            .addComponent(disciplineProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtWage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wageProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(cancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId)
                    .addComponent(idProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtName)
                    .addComponent(nameProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wageProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disciplineProfessorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiscipline))
                .addGap(0, 35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void loadTable() {
        DefaultTableModel model = (DefaultTableModel) this.tableProfessor.getModel();
        model.setNumRows(0);
        
        List<Professor> list = new ArrayList<>();
        list = professor.getProfessor();
        
        for(Professor p : list) {
            model.addRow(new Object[] {
                p.getId(),
                p.getName(),
                p.getAge(),
                p.getWage(),
                p.getDiscipline()
            });
        }
    }
    
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
         try {
            int selectedRow = tableProfessor.getSelectedRow();
            int id = Integer.parseInt(tableProfessor.getValueAt(selectedRow, 0).toString());
            String name = "";
            int age = 0;
            int wage = 0;
            String discipline = "";
                       
            if(this.nameProfessorField.getText().length() < 2) {
                throw new Messages("The name must contain at least 2 characters");
            } else {
                name = this.nameProfessorField.getText();
            }
            
            if(Integer.parseInt(this.ageProfessorField.getText()) <= 0) {
                throw new Messages("Age must be a number and be greater than 0");
            } else {
                age = Integer.parseInt(this.ageProfessorField.getText());
            }
            
            if(Integer.parseInt(this.wageProfessorField.getText()) < 1000) {
                throw new Messages("The wage must be at least 1000");
            } else {
                wage = Integer.parseInt(this.wageProfessorField.getText());
            }
            
            if(this.disciplineProfessorField.getText().length() < 2) {
                throw new Messages("Discipline must contain at least 2 characters");
            } else {
                discipline = this.disciplineProfessorField.getText();
            }
                           
            try {
                if(this.professor.updateProfessorDB(name, age, id, wage, discipline)) {
                    JOptionPane.showMessageDialog(null,"Successfully updated professor!");
                    professor.getProfessor().toString();

                    this.idProfessorField.setText("");
                    this.nameProfessorField.setText("");
                    this.ageProfessorField.setText("");
                    this.disciplineProfessorField.setText("");
                    this.wageProfessorField.setText("");
                   
                } else {
                    JOptionPane.showMessageDialog(null, "Error to Update professor!");
                }
            } catch (HeadlessException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (Messages e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            this.loadTable();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void idProfessorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idProfessorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idProfessorFieldActionPerformed

    private void ageProfessorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageProfessorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageProfessorFieldActionPerformed

    private void wageProfessorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wageProfessorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wageProfessorFieldActionPerformed

    private void tableProfessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProfessorMouseClicked
       try {
                int number = this.tableProfessor.getSelectedRow();
                
                this.idProfessorField.setText(tableProfessor.getValueAt(number, 0).toString());
                this.nameProfessorField.setText(tableProfessor.getValueAt(number, 1).toString());
                this.ageProfessorField.setText(tableProfessor.getValueAt(number, 2).toString());
                this.wageProfessorField.setText(tableProfessor.getValueAt(number, 3).toString());
                this.disciplineProfessorField.setText(String.valueOf(tableProfessor.getValueAt(number, 4).toString()));
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            } 
    }//GEN-LAST:event_tableProfessorMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        idProfessorField.setText("");
        nameProfessorField.setText("");
        ageProfessorField.setText("");
        disciplineProfessorField.setText("");
        wageProfessorField.setText("");
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            int id = 0;
            if(this.tableProfessor.getSelectedRow() == -1) {
                throw new Messages("First select a professor to delete!");
            } else {
                id = Integer.parseInt(this.tableProfessor.getValueAt(this.tableProfessor.getSelectedRow(), 0).toString());
            }
            
            int userConfirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete professor?");
            
            if(userConfirm == 0) {
                professor.deleteProfessorDB(id);
                this.idProfessorField.setText("");
                this.nameProfessorField.setText("");
                this.ageProfessorField.setText("");
                this.disciplineProfessorField.setText("");
                this.wageProfessorField.setText("");
                JOptionPane.showMessageDialog(null, "Successfully deleted professor!");
            }
            System.out.println(professor.getProfessor().toString());
        } catch (Messages e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally { 
            this.loadTable();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageProfessorField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField disciplineProfessorField;
    private javax.swing.JTextField idProfessorField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameProfessorField;
    private javax.swing.JTable tableProfessor;
    private javax.swing.JLabel txtAge;
    private javax.swing.JLabel txtDiscipline;
    private javax.swing.JLabel txtId;
    private javax.swing.JLabel txtName;
    private javax.swing.JLabel txtWage;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField wageProfessorField;
    // End of variables declaration//GEN-END:variables
}
