/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Model.Student;
import java.awt.Color;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Karlos
 */
public class ManageStudent extends javax.swing.JInternalFrame {
    public final Student student;
    /**
     * Creates new form ManageStudent
     */
    public ManageStudent() {
        this.student = new Student();
        initComponents();
        this.loadTable();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableStudent = new javax.swing.JTable();
        cancelButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        txtName = new javax.swing.JLabel();
        txtAge = new javax.swing.JLabel();
        txtCourse = new javax.swing.JLabel();
        txtStage = new javax.swing.JLabel();
        idStudentField = new javax.swing.JTextField();
        nameStudentField = new javax.swing.JTextField();
        ageStudentField = new javax.swing.JTextField();
        courseStudentField = new javax.swing.JTextField();
        stageStudentField = new javax.swing.JTextField();
        txtId = new javax.swing.JLabel();

        tableStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NAME", "AGE", "COURSE", "STAGE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableStudent);

        cancelButton.setBackground(new java.awt.Color(255, 153, 153));
        cancelButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(0, 0, 0));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(204, 255, 204));
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 0, 0));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 102, 102));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(0, 0, 0));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        txtName.setText("NAME:");

        txtAge.setText("AGE:");

        txtCourse.setText("COURSE:");

        txtStage.setText("STAGE:");

        idStudentField.setEditable(false);
        idStudentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idStudentFieldActionPerformed(evt);
            }
        });

        ageStudentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageStudentFieldActionPerformed(evt);
            }
        });

        stageStudentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stageStudentFieldActionPerformed(evt);
            }
        });

        txtId.setText("ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtName)
                            .addComponent(txtAge)
                            .addComponent(txtCourse)
                            .addComponent(txtStage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameStudentField)
                            .addComponent(courseStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stageStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(cancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId)
                    .addComponent(idStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtName)
                    .addComponent(nameStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCourse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stageStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStage))
                .addGap(0, 35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadTable() {
        DefaultTableModel model = (DefaultTableModel) this.tableStudent.getModel();
        model.setNumRows(0);
        
        List<Student> list = new ArrayList<>();
        list = student.getStudent();
        
        for (Student st : list) {
            model.addRow(new Object[]{
                st.getId(),
                st.getName(),
                st.getAge(),
                st.getCourse(),
                st.getStage()
            });
        }
    }
    
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            int selectedRow = tableStudent.getSelectedRow();
            int id = Integer.parseInt(tableStudent.getValueAt(selectedRow, 0).toString());
            String name = "";
            int age = 0;
            String course = "";
            int stage = 0;
            
                       
            if(this.nameStudentField.getText().length() < 2) {
                throw new Messages("The name must contain at least 2 characters");
            } else {
                name = this.nameStudentField.getText();
            }
            
            if(Integer.parseInt(this.ageStudentField.getText()) <= 0) {
                throw new Messages("Age must be a number and be greater than 0");
            } else {
                age = Integer.parseInt(this.ageStudentField.getText());
            }
            
            if(this.courseStudentField.getText().length() < 2) {
                throw new Messages("The course must contain at least 2 characters");
            } else {
                course = this.courseStudentField.getText();
            }
            
            if(Integer.parseInt(this.stageStudentField.getText()) < 0) {
                throw new Messages("Stage must be a number and cannot be 0");
            } else {
                stage = Integer.parseInt(this.stageStudentField.getText());
            }
             
            try {
                if(this.student.updateStudentDB(name, age, course, stage, id)) {
                    JOptionPane.showMessageDialog(null,"Successfully updated student!");
                    student.getStudent().toString();

                    this.idStudentField.setText("");
                    this.nameStudentField.setText("");
                    this.ageStudentField.setText("");
                    this.courseStudentField.setText("");
                    this.stageStudentField.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Error to Update student!");
                }
            } catch (HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (Messages e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally {
            this.loadTable();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void idStudentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idStudentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idStudentFieldActionPerformed

    private void ageStudentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageStudentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageStudentFieldActionPerformed

    private void stageStudentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stageStudentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stageStudentFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        idStudentField.setText("");
        nameStudentField.setText("");
        ageStudentField.setText("");
        courseStudentField.setText("");
        stageStudentField.setText("");
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void tableStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStudentMouseClicked
        try {
                int number = this.tableStudent.getSelectedRow();
                
                this.idStudentField.setText(tableStudent.getValueAt(number, 0).toString());
                this.nameStudentField.setText(tableStudent.getValueAt(number, 1).toString());
                this.ageStudentField.setText(tableStudent.getValueAt(number, 2).toString());
                this.courseStudentField.setText(tableStudent.getValueAt(number, 3).toString());
                this.stageStudentField.setText(String.valueOf(tableStudent.getValueAt(number, 4).toString()));
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            } 
    }//GEN-LAST:event_tableStudentMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            int id = 0;
            if(this.tableStudent.getSelectedRow() == -1) {
                throw new Messages("First select a student to delete!");
            } else {
                id = Integer.parseInt(this.tableStudent.getValueAt(this.tableStudent.getSelectedRow(), 0).toString());
            }
            
            int userConfirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete student?");
            
            if(userConfirm == 0) {
                student.deleteStudentDB(id);
                this.idStudentField.setText("");
                this.nameStudentField.setText("");
                this.ageStudentField.setText("");
                this.courseStudentField.setText("");
                this.stageStudentField.setText("");
                JOptionPane.showMessageDialog(null, "Successfully deleted student!");
            }
            System.out.println(student.getStudent().toString());
        } catch (Messages e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } finally { 
            this.loadTable();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageStudentField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField courseStudentField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField idStudentField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameStudentField;
    private javax.swing.JTextField stageStudentField;
    private javax.swing.JTable tableStudent;
    private javax.swing.JLabel txtAge;
    private javax.swing.JLabel txtCourse;
    private javax.swing.JLabel txtId;
    private javax.swing.JLabel txtName;
    private javax.swing.JLabel txtStage;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
